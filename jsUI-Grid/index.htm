<html>
<head>
    <title>jsUI-Grid Sample</title>
    <script language="javascript" src="../jsUI-Global/common.js"></script>
	<script language="javascript" src="../jsUI-Global/uiCommon.js"></script>
	<script language="javascript" src="../jsUI-Grid/component.js"></script>
    <script>
    
    var mygrid = new Object();
	function addGrid()
	{	
	    //set size and border of containing DIV
	    document.getElementById("gridCell").style.border = "1px solid black";
	    document.getElementById("gridCell").style.width = "369px";
    	
		//instantiate grid
		mygrid = gridNew("mygrid", "default", document.getElementById("gridCell"));
		mygrid.rowClick = rowClick;
		mygrid.editDone = editDone;
		
		//activate next examples
		document.getElementById("btnAddGrid").disabled = true;
		document.getElementById("btnAddGridColumns").disabled = false;
	}
	
	function addGridColumns()
	{
	    mygrid.createColumn("col1", "Index", null, null, true);
		mygrid.createColumn("col2", "Column 1", null, 100, null);
		mygrid.createColumn("col3", "Column 2", null, 100, null);
		mygrid.createColumn("col4", "Complete", "checkmark", 16, null);
		mygrid.createColumn("col5", "Column 3", null, 100, null);
		
		//activate next examples
		document.getElementById("btnAddGridColumns").disabled = true;
		document.getElementById("btnAddGridRow").disabled = false;
	}
	
	var rowCount = 1;
	function addGridRow()
	{
	    //create a row
		var cellArray = new Array();
		cellArray[0] = mygrid.createCell("r" + rowCount + "cell1", "First cell", "two", null, null, null);
		cellArray[1] = mygrid.createCell("r" + rowCount + "cell2", "Some Data", "&nbsp;", "float", null, null);
		cellArray[2] = mygrid.createCell("r" + rowCount + "cell3", "on", true, "check", null, null);
		cellArray[3] = mygrid.createCell("r" + rowCount + "cell4", "three", "three", "ellipsis", null, getMore);
		mygrid.createRow("row" + rowCount, cellArray);
		rowCount++;
	}
	
	function removeGridRow()
	{
	    mygrid.removeRow(mygrid.currentRow);
	    document.getElementById("btnRmvGridRow").disabled = true;
	}
	
    function rowClick(objRow)
    {
        document.getElementById("txtRowValue").value = objRow.id;
        document.getElementById("btnRmvGridRow").disabled = false;
    }
    
    function editDone(objCell)
    {
        document.getElementById("txtEditCell").value = objCell.id;
    }
    
    function getMore(objCell)
    {
        return prompt("Enter a new value...", objCell.value);
    }
    
    </script>
    <link rel='stylesheet' type='text/css' href='../documentation.css'></link>
</head>
<body vlink="#0000ff" link="#0000ff" alink="#0000ff">
<table width="100%"><tr><td valign="bottom">
<h3>Grid Sample</h3>
</td><td align="right" valign="middle"><a href="documentation.xml">Reference</a></td></tr></table>
<div class="sample">This sample demonstrates how to create and modify a grid.
<br />&nbsp;
<div id="gridCell"></div><br />
</div>
    <br />
    <input type="button" value="Create Grid" onclick="addGrid()" id="btnAddGrid"/>
    <div class="description">
            Instantiate the grid into an empty, global object, and add it to the DOM, using the <i>gridNew</i> method.<br />
            You can constrain the grid by placing it in a DIV and using the STYLE tag to specify size, border and overflow.
    </div>
    
    <input type="button" value="Create Columns" onclick="addGridColumns()" id="btnAddGridColumns" disabled="true"/>
    <div class="description">
            Create columns for the grid using the <i>createColumn</i> method once for each column
    </div>
    
    <input type="button" value="Create Row" onclick="addGridRow()" id="btnAddGridRow" disabled="true"/>
    <div class="description">
            Create a row consisting of an array of cells using the <i>createCell</i> and <i>createRow</i> methods
    </div>
    
    <input type="button" value="Remove Row" onclick="removeGridRow()" id="btnRmvGridRow" disabled="true"/>
    <div class="description">
            Remove a row using the <i>removeRow</i> method.
    </div>
    
    Row ID: <input type="text" value="" id="txtRowValue" disabled="true"/>
    <div class="description">
            Handle the <i>rowClick</i> event to get information about the selected row
    </div>
    
    Cell ID: <input type="text" value="" id="txtEditCell" disabled="true"/>
    <div class="description">
            Handle the <i>editDone</i> event to get information about a cell after the user has edited it
    </div>
    
    <br />
    <div class="footer">To view the source code, right-click this page and choose View Source from the shortcut menu that appears.</div>
    <br />
    © 2005 Jonathan Wise. Some rights reserved. 
</body>
</html>
 
 
